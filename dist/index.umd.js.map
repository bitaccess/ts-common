{"version":3,"file":"index.umd.js","sources":["../src/types/DateT.ts","../src/types/Logger.ts","../src/guards/basic.ts","../src/guards/codec.ts","../src/types/helpers.ts","../src/utils/string.ts","../src/utils/validation.ts"],"sourcesContent":["import * as t from 'io-ts'\n\nexport class DateType extends t.Type<Date> {\n  readonly _tag: 'DateType' = 'DateType'\n  constructor() {\n    super(\n      'Date',\n      (u): u is Date => u instanceof Date,\n      (u, c) => {\n        if (this.is(u)) {\n          return t.success(u)\n        } else if (t.number.is(u) || t.string.is(u)) {\n          const date = new Date(u)\n          if (Number.isNaN(date.getTime())) {\n            return t.failure(u, c)\n          } else {\n            return t.success(date)\n          }\n        } else {\n          return t.failure(u, c)\n        }\n      },\n      t.identity,\n    )\n  }\n}\n\nexport interface DateC extends DateType {}\nexport const DateT: DateC = new DateType()\n","import * as t from 'io-ts'\n\n// Define a custom LoggerType that uses an underlying LoggerCodec because io-ts\n// doesn't support function signatures. The inferred LoggerCodec type is\n// incompatible with the static Logger interface.\n\nexport type LoggerFn = (...args: any[]) => void\n\nexport interface Logger {\n  error: LoggerFn\n  warn: LoggerFn\n  info: LoggerFn\n  log: LoggerFn\n  debug: LoggerFn\n  trace: LoggerFn\n}\n\nconst LoggerCodec = t.type(\n  {\n    error: t.Function,\n    warn: t.Function,\n    info: t.Function,\n    log: t.Function,\n    debug: t.Function,\n    trace: t.Function,\n  },\n  'Logger',\n)\n\nclass LoggerType extends t.Type<Logger> {\n  readonly _tag: 'LoggerType' = 'LoggerType'\n  constructor() {\n    super(\n      'Logger',\n      (u): u is Logger => LoggerCodec.is(u),\n      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),\n      t.identity,\n    )\n  }\n}\n\nexport interface LoggerC extends LoggerType {}\nexport const Logger: LoggerC = new LoggerType()\n","export function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x !== null && !Array.isArray(x)\n}\n\nexport function isEmptyObject(x: unknown): x is {} {\n  return isObject(x) && Object.entries(x).length === 0 && x.constructor === Object\n}\n\nexport function isUndefined(x: unknown): x is undefined {\n  return typeof x === 'undefined'\n}\n\nexport function isNull(x: unknown): x is null {\n  return x === null\n}\n\nexport function isNil(x: unknown): x is null | undefined {\n  return isUndefined(x) || isNull(x)\n}\n\nexport function isString(x: unknown): x is string {\n  return typeof x === 'string'\n}\n\nexport function isNumber(x: unknown): x is number {\n  return typeof x === 'number'\n}\n\nexport function isArray(x: unknown): x is unknown[] {\n  return Array.isArray(x)\n}\n","import * as t from 'io-ts'\n\nexport function isType<T extends t.Mixed>(codec: T, x: unknown): x is t.TypeOf<T> {\n  return codec.is(x)\n}\n","import * as t from 'io-ts'\nimport { isEmptyObject } from '#/guards'\n\nexport const nullable = <T extends t.Mixed>(codec: T) => t.union([codec, t.nullType], `${codec.name}Nullable`)\nexport const optional = <T extends t.Mixed>(codec: T) => t.union([codec, t.undefined], `${codec.name}Optional`)\n\n/**\n * Creates an io-ts runtime type based off a typescript enum `e`\n */\nexport function enumCodec<E>(e: Object, name: string): t.Type<E> {\n  const keyed: { [k: string]: null } = {}\n  Object.values(e).forEach(v => {\n    keyed[v] = null\n  })\n  return t.keyof(keyed, name) as any\n}\n\n/**\n * Creates a codec for an object with required and optional params using an intersection\n * codec.\n *\n * @param required The required attributes\n * @param optional The optional attributes\n * @param name The name of the type\n */\nexport function requiredOptionalCodec<A extends t.Props, B extends t.Props>(required: A, optional: B, name: string) {\n  return t.intersection([t.type(required, `${name}Req`), t.partial(optional, `${name}Opt`)], name)\n}\n\n/**\n * Extends a codec with additional required and optional attributes\n *\n * @param parent The type to extend\n * @param required The required props to add\n * @param optional The optional props to add\n * @param name The name of the type\n */\nexport function extendCodec<P extends t.Mixed>(parent: P, required: {}, name: string): P\nexport function extendCodec<P extends t.Mixed, R extends t.Props>(\n  parent: P,\n  required: R,\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>]>\nexport function extendCodec<P extends t.Mixed>(parent: P, required: {}, optional: {}, name: string): P\nexport function extendCodec<P extends t.Mixed, O extends t.Props>(\n  parent: P,\n  required: {},\n  optional: O,\n  name: string,\n): t.IntersectionC<[P, t.PartialC<O>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props>(\n  parent: P,\n  required: R,\n  optional: {},\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props, O extends t.Props>(\n  parent: P,\n  required: R,\n  optional: O,\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>, t.PartialC<O>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props, O extends t.Props>(\n  parent: P,\n  required: R | {},\n  optional: O | {} | string,\n  name?: string,\n): any {\n  if (typeof optional === 'string') {\n    name = optional\n    optional = {}\n  }\n  const noRequired = isEmptyObject(required)\n  const noOptional = isEmptyObject(optional)\n  const nameOpt = `${name}Opt`\n  const nameReq = `${name}Req`\n  if (noRequired && noOptional) {\n    return parent\n  }\n  if (noRequired) {\n    return t.intersection([parent, t.partial(optional, nameOpt)], name)\n  }\n  if (noOptional) {\n    return t.intersection([parent, t.type(required, nameReq)], name)\n  }\n  return t.intersection([parent, t.type(required, nameReq), t.partial(optional, nameOpt)], name)\n}\n","import { getFunctionName } from 'io-ts'\n\nexport function stringify(v: any): string {\n  if (typeof v === 'undefined') {\n    return 'undefined'\n  }\n  if (typeof v === 'function') {\n    return getFunctionName(v)\n  }\n  if (typeof v === 'number' && !isFinite(v)) {\n    if (isNaN(v)) {\n      return 'NaN'\n    }\n    return v > 0 ? 'Infinity' : '-Infinity'\n  }\n  return JSON.stringify(v)\n}\n\nexport function capitalizeFirst(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n","import { Context, ValidationError, UnionType, IntersectionType, Type } from 'io-ts'\nimport { Reporter } from 'io-ts/lib/Reporter'\nimport { stringify } from './string'\n\nfunction getContextPath(context: Context): string {\n  return context\n    .filter(({ type }, i) => {\n      if (i === 0) return true\n      const previousType = context[i - 1].type\n      return !(previousType instanceof UnionType || previousType instanceof IntersectionType)\n    })\n    .map(({ key, type }) => (key ? key : type.name))\n    .join('.')\n}\n\nexport function getMessage(e: ValidationError): string {\n  const expectedType = e.context.length > 0 ? e.context[e.context.length - 1].type.name : ''\n  const contextPath = getContextPath(e.context)\n  const expectedMessage = expectedType !== contextPath ? `${expectedType} for ${contextPath}` : expectedType\n  return e.message !== undefined ? e.message : `Expected type ${expectedMessage}, but got: ${stringify(e.value)}`\n}\n\nexport const SimpleReporter: Reporter<Array<string>> = {\n  report: validation => validation.fold(es => es.map(getMessage), () => ['No errors!']),\n}\n\n/**\n * Throws a type error if `value` isn't conformant to type `T`.\n *\n * @param typeCodec - An io-ts type codec for T\n * @param value - The value to check\n * @returns The decoded value\n * @throws TypeError when assertion fails\n */\nexport function assertType<T>(typeCodec: Type<T>, value: unknown, description: string = 'type'): T {\n  const validation = typeCodec.decode(value)\n  if (validation.isLeft()) {\n    throw new TypeError(`Invalid ${description} - ${SimpleReporter.report(validation)[0]}`)\n  }\n  return validation.value\n}\n"],"names":["t.Type","t.success","t.number","t.string","t.failure","t.identity","t.type","t.Function","t.union","t.nullType","t.undefined","t.keyof","t.intersection","t.partial","getFunctionName","UnionType","IntersectionType"],"mappings":"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"}