{"version":3,"file":"index.cjs.js","sources":["../src/types/DateT.ts","../src/guards/basic.ts","../src/guards/codec.ts","../src/types/helpers.ts","../src/utils/string.ts","../src/utils/validation.ts"],"sourcesContent":["import * as t from 'io-ts'\n\nexport class DateType extends t.Type<Date> {\n  readonly _tag: 'DateType' = 'DateType'\n  constructor() {\n    super(\n      'Date',\n      (u): u is Date => u instanceof Date,\n      (u, c) => {\n        if (this.is(u)) {\n          return t.success(u)\n        } else if (t.number.is(u) || t.string.is(u)) {\n          const date = new Date(u)\n          if (Number.isNaN(date.getTime())) {\n            return t.failure(u, c)\n          } else {\n            return t.success(date)\n          }\n        } else {\n          return t.failure(u, c)\n        }\n      },\n      t.identity,\n    )\n  }\n}\n\nexport interface DateC extends DateType {}\nexport const DateT: DateC = new DateType()\n","export function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x !== null && !Array.isArray(x)\n}\n\nexport function isEmptyObject(x: unknown): x is {} {\n  return isObject(x) && Object.entries(x).length === 0 && x.constructor === Object\n}\n\nexport function isUndefined(x: unknown): x is undefined {\n  return typeof x === 'undefined'\n}\n\nexport function isNull(x: unknown): x is null {\n  return x === null\n}\n\nexport function isNil(x: unknown): x is null | undefined {\n  return isUndefined(x) || isNull(x)\n}\n\nexport function isString(x: unknown): x is string {\n  return typeof x === 'string'\n}\n\nexport function isNumber(x: unknown): x is number {\n  return typeof x === 'number'\n}\n\nexport function isArray(x: unknown): x is unknown[] {\n  return Array.isArray(x)\n}\n","import * as t from 'io-ts'\n\nexport function isType<T extends t.Mixed>(codec: T, x: unknown): x is t.TypeOf<T> {\n  return codec.is(x)\n}\n","import * as t from 'io-ts'\nimport { isEmptyObject } from '#/guards'\n\nexport const nullable = <T extends t.Mixed>(codec: T) => t.union([codec, t.nullType], `${codec.name}Nullable`)\nexport const optional = <T extends t.Mixed>(codec: T) => t.union([codec, t.undefined], `${codec.name}Optional`)\n\n/**\n * Creates an io-ts runtime type based off a typescript enum `e`\n */\nexport function enumCodec<E>(e: Object, name: string): t.Type<E> {\n  const keyed: { [k: string]: null } = {}\n  Object.values(e).forEach(v => {\n    keyed[v] = null\n  })\n  return t.keyof(keyed, name) as any\n}\n\n/**\n * Creates a codec for an object with required and optional params using an intersection\n * codec.\n *\n * @param required The required attributes\n * @param optional The optional attributes\n * @param name The name of the type\n */\nexport function requiredOptionalCodec<A extends t.Props, B extends t.Props>(required: A, optional: B, name: string) {\n  return t.intersection([t.type(required, `${name}Req`), t.partial(optional, `${name}Opt`)], name)\n}\n\n/**\n * Extends a codec with additional required and optional attributes\n *\n * @param parent The type to extend\n * @param required The required props to add\n * @param optional The optional props to add\n * @param name The name of the type\n */\nexport function extendCodec<P extends t.Mixed>(parent: P, required: {}, name: string): P\nexport function extendCodec<P extends t.Mixed, R extends t.Props>(\n  parent: P,\n  required: R,\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>]>\nexport function extendCodec<P extends t.Mixed>(parent: P, required: {}, optional: {}, name: string): P\nexport function extendCodec<P extends t.Mixed, O extends t.Props>(\n  parent: P,\n  required: {},\n  optional: O,\n  name: string,\n): t.IntersectionC<[P, t.PartialC<O>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props>(\n  parent: P,\n  required: R,\n  optional: {},\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props, O extends t.Props>(\n  parent: P,\n  required: R,\n  optional: O,\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>, t.PartialC<O>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props, O extends t.Props>(\n  parent: P,\n  required: R | {},\n  optional: O | {} | string,\n  name?: string,\n): any {\n  if (typeof optional === 'string') {\n    name = optional\n    optional = {}\n  }\n  const noRequired = isEmptyObject(required)\n  const noOptional = isEmptyObject(optional)\n  const nameOpt = `${name}Opt`\n  const nameReq = `${name}Req`\n  if (noRequired && noOptional) {\n    return parent\n  }\n  if (noRequired) {\n    return t.intersection([parent, t.partial(optional, nameOpt)], name)\n  }\n  if (noOptional) {\n    return t.intersection([parent, t.type(required, nameReq)], name)\n  }\n  return t.intersection([parent, t.type(required, nameReq), t.partial(optional, nameOpt)], name)\n}\n","import { getFunctionName } from 'io-ts'\n\nexport function stringify(v: any): string {\n  if (typeof v === 'undefined') {\n    return 'undefined'\n  }\n  if (typeof v === 'function') {\n    return getFunctionName(v)\n  }\n  if (typeof v === 'number' && !isFinite(v)) {\n    if (isNaN(v)) {\n      return 'NaN'\n    }\n    return v > 0 ? 'Infinity' : '-Infinity'\n  }\n  return JSON.stringify(v)\n}\n\nexport function capitalizeFirst(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n","import { Context, ValidationError, UnionType, IntersectionType, Type } from 'io-ts'\nimport { Reporter } from 'io-ts/lib/Reporter'\nimport { stringify } from './string'\n\nfunction getContextPath(context: Context): string {\n  return context\n    .filter(({ type }, i) => {\n      if (i === 0) return true\n      const previousType = context[i - 1].type\n      return !(previousType instanceof UnionType || previousType instanceof IntersectionType)\n    })\n    .map(({ key, type }) => (key ? key : type.name))\n    .join('.')\n}\n\nexport function getMessage(e: ValidationError): string {\n  const expectedType = e.context.length > 0 ? e.context[e.context.length - 1].type.name : ''\n  const contextPath = getContextPath(e.context)\n  const expectedMessage = expectedType !== contextPath ? `${expectedType} for ${contextPath}` : expectedType\n  return e.message !== undefined ? e.message : `Expected type ${expectedMessage}, but got: ${stringify(e.value)}`\n}\n\nexport const SimpleReporter: Reporter<Array<string>> = {\n  report: validation => validation.fold(es => es.map(getMessage), () => ['No errors!']),\n}\n\n/**\n * Throws a type error if `value` isn't conformant to type `T`.\n *\n * @param typeCodec - An io-ts type codec for T\n * @param value - The value to check\n * @returns The decoded value\n * @throws TypeError when assertion fails\n */\nexport function assertType<T>(typeCodec: Type<T>, value: unknown, description: string = 'type'): T {\n  const validation = typeCodec.decode(value)\n  if (validation.isLeft()) {\n    throw new TypeError(`Invalid ${description} - ${SimpleReporter.report(validation)[0]}`)\n  }\n  return validation.value\n}\n"],"names":["t.Type","t.success","t.number","t.string","t.failure","t.identity","t.union","t.nullType","t.undefined","t.keyof","t.intersection","t.type","t.partial","getFunctionName","UnionType","IntersectionType"],"mappings":"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"}