{"version":3,"file":"index.cjs.js","sources":["../src/types/Date.ts","../src/types/Logger.ts","../src/guards/basic.ts","../src/guards/codec.ts","../src/types/helpers.ts","../src/types/BigNumber.ts","../src/types/basic.ts","../src/types/Enum.ts","../src/types/Function.ts","../src/utils/string.ts","../src/utils/validation.ts","../src/utils/helpers.ts","../src/DelegateLogger.ts"],"sourcesContent":["import * as t from 'io-ts'\n\nexport class DateType extends t.Type<Date> {\n  readonly _tag: 'DateType' = 'DateType'\n  constructor() {\n    super(\n      'Date',\n      (u): u is Date => u instanceof Date,\n      (u, c) => {\n        if (this.is(u)) {\n          return t.success(u)\n        } else if (t.number.is(u) || t.string.is(u)) {\n          const date = new Date(u)\n          if (Number.isNaN(date.getTime())) {\n            return t.failure(u, c)\n          } else {\n            return t.success(date)\n          }\n        } else {\n          return t.failure(u, c)\n        }\n      },\n      t.identity,\n    )\n  }\n}\n\nexport interface DateC extends DateType {}\nexport const DateT: DateC = new DateType()\n","import * as t from 'io-ts'\n\n// Define a custom LoggerType that uses an underlying LoggerCodec because io-ts\n// doesn't support function signatures. The inferred LoggerCodec type is\n// incompatible with the static Logger interface.\n\nexport type LoggerFn = (...args: any[]) => void\n\nexport interface Logger {\n  error: LoggerFn\n  warn: LoggerFn\n  info: LoggerFn\n  log: LoggerFn\n  debug: LoggerFn\n  trace: LoggerFn\n}\n\nconst LoggerCodec = t.type(\n  {\n    error: t.Function,\n    warn: t.Function,\n    info: t.Function,\n    log: t.Function,\n    debug: t.Function,\n    trace: t.Function,\n  },\n  'Logger',\n)\n\nclass LoggerType extends t.Type<Logger> {\n  readonly _tag: 'LoggerType' = 'LoggerType'\n  constructor() {\n    super(\n      'Logger',\n      (u): u is Logger => LoggerCodec.is(u),\n      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),\n      t.identity,\n    )\n  }\n}\n\nexport interface LoggerC extends LoggerType {}\nexport const Logger: LoggerC = new LoggerType()\n","export function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x !== null && !Array.isArray(x)\n}\n\nexport function isEmptyObject(x: unknown): x is {} {\n  return isObject(x) && Object.entries(x).length === 0 && x.constructor === Object\n}\n\nexport function isUndefined(x: unknown): x is undefined {\n  return typeof x === 'undefined'\n}\n\nexport function isNull(x: unknown): x is null {\n  return x === null\n}\n\nexport function isNil(x: unknown): x is null | undefined {\n  return isUndefined(x) || isNull(x)\n}\n\nexport function isString(x: unknown): x is string {\n  return typeof x === 'string'\n}\n\nexport function isNumber(x: unknown): x is number {\n  return typeof x === 'number'\n}\n\nexport function isArray(x: unknown): x is unknown[] {\n  return Array.isArray(x)\n}\n","import * as t from 'io-ts'\n\nexport function isType<T extends t.Mixed>(codec: T, x: unknown): x is t.TypeOf<T> {\n  return codec.is(x)\n}\n","import * as t from 'io-ts'\nimport { map } from 'fp-ts/lib/Record'\nimport { isEmptyObject } from '#/guards'\n\nexport function instanceofCodec<T>(con: { new (...args: any[]): T }): t.Type<T> {\n  return new t.Type(\n    `instanceof(${con.name})`,\n    (u): u is T => u instanceof con,\n    (u, c) => (u instanceof con ? t.success(u) : t.failure(u, c)),\n    t.identity,\n  )\n}\n\nexport function partialRecord<KS extends t.KeyofType<any>, T extends t.Any>(\n  k: KS,\n  type: T,\n  name?: string,\n): t.PartialC<Record<keyof KS['keys'], T>> {\n  return t.partial(map(k.keys, () => type) as any, name)\n}\n\nexport function autoImplement<T extends object>() {\n  return class {\n    constructor(values?: T | (() => T)) {\n      if (values) {\n        Object.assign(this, typeof values === 'object' ? values : values())\n      }\n    }\n  } as new (values?: T | (() => T)) => T\n}\n\nexport const nullable = <T extends t.Mixed>(codec: T) => t.union([codec, t.nullType])\nexport const optional = <T extends t.Mixed>(codec: T) => t.union([codec, t.undefined])\n\n/**\n * Creates a codec for an object with required and optional params using an intersection\n * codec.\n *\n * @param required The required attributes\n * @param optional The optional attributes\n * @param name The name of the type\n */\nexport function requiredOptionalCodec<A extends t.Props, B extends t.Props>(required: A, optional: B, name: string) {\n  return t.intersection([t.type(required, `${name}Req`), t.partial(optional, `${name}Opt`)], name)\n}\n\n/**\n * Extends a codec with additional required and optional attributes\n *\n * @param parent The type to extend\n * @param required The required props to add\n * @param optional The optional props to add\n * @param name The name of the type\n */\nexport function extendCodec<P extends t.Mixed>(parent: P, required: {}, name: string): P\nexport function extendCodec<P extends t.Mixed, R extends t.Props>(\n  parent: P,\n  required: R,\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>]>\nexport function extendCodec<P extends t.Mixed>(parent: P, required: {}, optional: {}, name: string): P\nexport function extendCodec<P extends t.Mixed, O extends t.Props>(\n  parent: P,\n  required: {},\n  optional: O,\n  name: string,\n): t.IntersectionC<[P, t.PartialC<O>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props>(\n  parent: P,\n  required: R,\n  optional: {},\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props, O extends t.Props>(\n  parent: P,\n  required: R,\n  optional: O,\n  name: string,\n): t.IntersectionC<[P, t.TypeC<R>, t.PartialC<O>]>\nexport function extendCodec<P extends t.Mixed, R extends t.Props, O extends t.Props>(\n  parent: P,\n  required: R | {},\n  optional: O | {} | string,\n  name?: string,\n): any {\n  if (typeof optional === 'string') {\n    name = optional\n    optional = {}\n  }\n  const noRequired = isEmptyObject(required)\n  const noOptional = isEmptyObject(optional)\n  const nameOpt = `${name}Opt`\n  const nameReq = `${name}Req`\n  if (noRequired && noOptional) {\n    return parent\n  }\n  if (noRequired) {\n    return t.intersection([parent, t.partial(optional, nameOpt)], name)\n  }\n  if (noOptional) {\n    return t.intersection([parent, t.type(required, nameReq)], name)\n  }\n  return t.intersection([parent, t.type(required, nameReq), t.partial(optional, nameOpt)], name)\n}\n","import * as t from 'io-ts'\nimport BigNumber from 'bignumber.js'\n\nclass BigNumberType extends t.Type<BigNumber, string> {\n  readonly _tag: 'BigNumberType' = 'BigNumberType'\n  constructor() {\n    super(\n      'BigNumberT',\n      (u): u is BigNumber => u instanceof BigNumber,\n      (u, c) => {\n        if (u instanceof BigNumber || (u && (u as any)._isBigNumber)) {\n          return t.success(u as BigNumber)\n        } else if (t.number.is(u)) {\n          return t.success(new BigNumber(u))\n        } else if (t.string.is(u)) {\n          const v = new BigNumber(u)\n          if (v.isNaN()) {\n            return t.failure(u, c)\n          } else {\n            return t.success(v)\n          }\n        } else {\n          return t.failure(u, c)\n        }\n      },\n      u => u.toString(),\n    )\n  }\n}\nexport interface BigNumberC extends BigNumberType {}\n/**\n * An io-ts codec representing a BigNumber. Can also be decoded from a string or number.\n */\nexport const BigNumberT: BigNumberC = new BigNumberType()\nexport type BigNumberT = t.TypeOf<typeof BigNumberT>\n","import * as t from 'io-ts'\nimport { BigNumberT } from './BigNumber'\n\nexport type Predicate<T> = (x: T) => boolean\n\nexport type Defined<T> = T extends undefined ? never : T\n\nexport type DeepPartial<T> = {\n  [P in keyof T]?: T[P] extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T[P] extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : DeepPartial<T[P]>\n}\n\nexport type Enum = (string | number)[] | Object\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nexport const Numeric = t.union([t.string, t.number, BigNumberT], 'Numeric')\nexport type Numeric = t.TypeOf<typeof Numeric>\n\nexport type PromiseValue<T> = T extends Promise<infer X> ? X : never\n","import * as t from 'io-ts'\n\nexport class EnumType<E> extends t.Type<E> {\n  readonly _tag: 'EnumType' = 'EnumType'\n  constructor(name: string, is: EnumType<E>['is'], validate: EnumType<E>['validate'], encode: EnumType<E>['encode']) {\n    super(name, is, validate, encode)\n  }\n}\n\nexport interface EnumC<E> extends EnumType<E> {}\n\n/**\n * Creates an io-ts runtime type based off a typescript enum `e`\n */\nexport function enumCodec<E extends string>(e: Object, name: string, defaultValue?: E): t.Type<E> {\n  const keyed: { [k: string]: null } = {}\n  Object.values(e).forEach(v => {\n    keyed[v] = null\n  })\n  const valueUnion = (t.keyof(keyed) as any) as t.Type<E>\n  return new EnumType(\n    name,\n    (u): u is E => valueUnion.is(u),\n    (u, c) => {\n      const validation = valueUnion.validate(u, c)\n      if (validation.isRight()) {\n        return validation\n      } else if (typeof defaultValue !== 'undefined' && typeof u === 'string') {\n        return t.success(defaultValue)\n      } else {\n        return t.failure(u, c)\n      }\n    },\n    t.identity,\n  )\n}\n","import * as t from 'io-ts'\n\nclass FunctionType<Fn extends Function> extends t.Type<Fn> {\n  readonly _tag: 'FunctionType' = 'FunctionType'\n  constructor(name: string = 'Function') {\n    super(\n      name,\n      (u): u is Fn => typeof u === 'function',\n      (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)),\n      t.identity,\n    )\n  }\n}\nexport interface FunctionC<Fn extends Function> extends FunctionType<Fn> {}\n/**\n * An io-ts codec representing a Function. Only tests for typeof function but allows generic to specify\n * a more specific static type with a signature and return type.\n */\nexport function functionT<Fn extends Function>(name?: string): FunctionC<Fn> {\n  return new FunctionType<Fn>(name)\n}\n","import { getFunctionName } from 'io-ts'\n\nexport function stringify(v: any): string {\n  if (typeof v === 'undefined') {\n    return 'undefined'\n  }\n  if (typeof v === 'function') {\n    return getFunctionName(v)\n  }\n  if (typeof v === 'number' && !isFinite(v)) {\n    if (isNaN(v)) {\n      return 'NaN'\n    }\n    return v > 0 ? 'Infinity' : '-Infinity'\n  }\n  return JSON.stringify(v)\n}\n\nexport function capitalizeFirst(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n","import { Context, ValidationError, UnionType, IntersectionType, Type, PartialType, Decoder } from 'io-ts'\nimport { Reporter } from 'io-ts/lib/Reporter'\nimport { stringify } from './string'\n\nfunction isCodec<T extends { new (...args: any[]): Type<any> }>(\n  actual: object,\n  expected: T,\n): actual is InstanceType<T> {\n  return actual instanceof expected || (actual as any)._tag === expected.name\n}\n\nfunction getContextPath(context: Context): string {\n  return context\n    .filter(({ type }, i) => {\n      if (i === 0) return true\n      const previousType = context[i - 1].type as any\n      return !(isCodec(previousType, UnionType) || isCodec(previousType, IntersectionType))\n    })\n    .map(({ key, type }) => (key ? key : type.name))\n    .join('.')\n}\n\nfunction getFlattenedCodecName(codec: Decoder<any, any>): string {\n  if (isCodec(codec, UnionType)) {\n    return codec.types.map(t => getFlattenedCodecName(t)).join(' | ')\n  }\n  return codec.name\n}\n\nfunction getContextTypeName(context: Context): string {\n  if (context.length <= 0) {\n    return ''\n  }\n  let codec = context[context.length - 1].type\n  for (let i = context.length - 1; i > 0; i--) {\n    const parent = context[i - 1].type\n    if (isCodec(parent, UnionType)) {\n      codec = parent\n    } else if (isCodec(parent, PartialType)) {\n      return `${getFlattenedCodecName(codec)} | undefined`\n    }\n  }\n  return `${getFlattenedCodecName(codec)}`\n}\n\nexport function getMessage(e: ValidationError): string {\n  const expectedType = getContextTypeName(e.context)\n  const contextPath = getContextPath(e.context)\n  const expectedMessage = expectedType !== contextPath ? `${expectedType} for ${contextPath}` : expectedType\n  return e.message !== undefined ? e.message : `Expected type ${expectedMessage}, but got: ${stringify(e.value)}`\n}\n\nexport const SimpleReporter: Reporter<Array<string>> = {\n  report: validation => validation.fold(es => es.map(getMessage), () => ['No errors!']),\n}\n\n/**\n * Throws a type error if `value` isn't conformant to type `T`.\n *\n * @param typeCodec - An io-ts type codec for T\n * @param value - The value to check\n * @returns The decoded value\n * @throws TypeError when assertion fails\n */\nexport function assertType<T>(\n  typeCodec: Type<T, any, unknown>,\n  value: unknown,\n  description: string = 'type',\n  ErrorType: { new (message: string): Error } = TypeError,\n): T {\n  const validation = typeCodec.decode(value)\n  if (validation.isLeft()) {\n    throw new ErrorType(`Invalid ${description} - ${SimpleReporter.report(validation)[0]}`)\n  }\n  return validation.value\n}\n","import BigNumber from 'bignumber.js'\nimport { Numeric } from '../types'\nimport { isNil } from '../guards'\n\nexport function isMatchingError(e: Error, partialMessages: string[]) {\n  const messageLower = e.toString().toLowerCase()\n  return partialMessages.some(pm => messageLower.includes(pm.toLowerCase()))\n}\n\nexport function toBigNumber(value: Numeric): BigNumber\nexport function toBigNumber(value: Numeric | null): BigNumber | null\nexport function toBigNumber(value: Numeric | undefined): BigNumber | undefined\nexport function toBigNumber(value: Numeric | null | undefined): BigNumber | null | undefined\nexport function toBigNumber(value: Numeric | null | undefined): BigNumber | null | undefined {\n  if (isNil(value)) {\n    return value\n  }\n  if (value instanceof BigNumber) {\n    return value\n  }\n  return new BigNumber(value)\n}\n","import { Logger } from './types'\n\nexport class DelegateLogger implements Logger {\n  logger: Logger | null\n\n  constructor(logger?: Logger | null | undefined, private readonly prefix?: string) {\n    this.logger = typeof logger === 'undefined' ? console : logger\n    if (prefix) {\n      this.prefix = `[${prefix}]`\n    }\n  }\n\n  private delegate(method: keyof Logger) {\n    return (...args: any[]) => {\n      if (this.logger !== null) {\n        if (this.prefix) {\n          this.logger[method](this.prefix, ...args)\n        } else {\n          this.logger[method](...args)\n        }\n      }\n    }\n  }\n\n  error = this.delegate('error')\n  warn = this.delegate('warn')\n  info = this.delegate('info')\n  log = this.delegate('log')\n  debug = this.delegate('debug')\n  trace = this.delegate('trace')\n}\n"],"names":["t.Type","t.success","t.number","t.string","t.failure","t.identity","t.type","t.Function","t.partial","map","t.union","t.nullType","t.undefined","t.intersection","t.keyof","getFunctionName","UnionType","IntersectionType","PartialType"],"mappings":"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"}